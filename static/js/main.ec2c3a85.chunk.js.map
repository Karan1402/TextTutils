{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/About.js","component/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","aria-expanded","aria-label","id","aria-current","aboutText","role","aria-disabled","onClick","toggleMode","htmlfor","text","TextForm","setText","useState","Fragment","style","color","heading","value","rows","onChange","event","console","log","target","backgroundColor","handleUpClick","newText","toUpperCase","showAlert","handleLowClick","toLowerCase","handletoClear","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handextraSplace","split","join","length","About","state","setstate","change","newchange","data-bs-target","aria-controls","data-bs-parent","toggle","defaultProps","Alerts","class","word","lower","charAt","slice","capataliz","msg","App","alert","setalert","message","setTimeout","setmode","settext","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.ec2c3a85.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"/\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Dropdown\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    Action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    Another action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <hr className=\"dropdown-divider\" />\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    Something else here\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"/\" aria-disabled=\"true\">\r\n                Disabled\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlfor=\"flexSwitchCheckDefault\"\r\n            >\r\n              {props.text}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n//to check value type\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"set about text here\"\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"Upper case was clicked \" + text);\r\n    let newText = text.toUpperCase();\r\n\r\n    setText(newText);\r\n\r\n    props.showAlert(\"converted to upper case\", \"success\");\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n\r\n    setText(newText);\r\n    props.showAlert(\"converted to lower case\", \"success\");\r\n  };\r\n\r\n  const handletoClear = () => {\r\n    let newText = \" \";\r\n\r\n    setText(newText);\r\n    props.showAlert(\"text clear\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"copy to clipboard\", \"success\");\r\n  };\r\n\r\n  const handextraSplace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n\r\n    props.showAlert(\"remove extra spaces\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On change was clicked\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  // text=\"new text\"            //wrong way to change text\r\n  // setText=(\"new setText\");   //right way to change\r\n\r\n  //color\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#062757\"\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            rows=\"8\"\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n\r\n              color: props.mode === \"dark\" ? \"white\" : \"#062757\"\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to upper class\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\r\n          Convert to Lower class\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handletoClear}>\r\n          clear\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          text copy\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handextraSplace}>\r\n          remove extra spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#062757\"\r\n        }}\r\n      >\r\n        <h1>your text summery</h1>\r\n        <p>\r\n          {text.split(\" \").length} words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.length} Minutes to read</p>\r\n        <h2> Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [state, setstate] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\"\r\n  });\r\n\r\n  const [change, newchange] = useState(\"Enable dark mode\");\r\n\r\n  const toggle = () => {\r\n    if (state.color === \"white\") {\r\n      setstate({ color: \"black\", backgroundColor: \"white\" });\r\n      newchange(\"Enable dark mode\");\r\n    } else {\r\n      setstate({ color: \"white\", backgroundColor: \"black\" });\r\n      newchange(\"Enable light mode\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                style={state}\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={state}>\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classes that we use to style each element. These classes control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={state}\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={state}>\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n                style={state}\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={state}>\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={toggle}>\r\n          {change}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alerts(props) {\r\n  const capataliz = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.Alerts && (\r\n      <div\r\n        class={`alert alert-${props.Alerts.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong> {capataliz(props.Alerts.type)}</strong> : {props.Alerts.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alerts;\r\n","import \"./App.css\";\n\nimport React, { useState } from \"react\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport About from \"./component/About\";\n\nimport Alerts from \"./component/Alerts\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({ msg: message, type: type });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n\n  const [mode, setmode] = useState(\"light\");\n\n  const [text, settext] = useState(\"dark mode\");\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      settext(\"light mode\");\n      document.body.style.backgroundColor = \"#062757\";\n      showAlert(\"drak mode has enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      settext(\"dark mode\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextTuitles\"\n        aboutText=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n        text={text}\n      />\n      <Alerts Alerts={alert} />\n\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n        {/* <Route\n              exact\n              path=\"/\"\n              element={ */}\n        <TextForm\n          heading=\"Enter text to Analyze\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* }\n            ></Route> */}\n        {/* <Route exact path=\"/about\" element={<About />}></Route> */}\n        {/* <Route exact path=\"/contact\" element={<Contact />}></Route> */}\n        {/* </Routes> */}\n        <About />\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}